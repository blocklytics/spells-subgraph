type Timelock @entity {
  id: ID!
  platform: Platform!
  currentAdmin: String # Optional
  spells: [Spell]! @derivedFrom(field: "timelock")
}

type Platform @entity {
  id: ID!
  currentAdmin: String # Optional
  usesAdmin: Boolean!
  usesTimelock: Boolean!
  spells: [Spell]! @derivedFrom(field: "platform")
  targets: [Target]! @derivedFrom(field: "platform")
  timelocks: [Timelock]! @derivedFrom(field: "platform")
}

type Spell @entity {
  id: ID!            # Uses various unique representations (do not use tx hash; it will not be the same across lifecycle events)
  description: String              # Optional
  eta: BigInt!                     # Set to 0 if not applicable
  createdAtTimestamp: BigInt!
  createdAtTransaction: String!
  expiresAtTimestamp: BigInt!      # Set to 0 if not applicable
  value: BigInt!
  functionName: String!            # Human-readable function name
  signature: String!               # Function signature (keccak hash)
  data: String!                    # Prepend with 0x
  target: Target!
  timelock: Timelock!
  platform: Platform!
  isCancelled: Boolean!
  isExecuted: Boolean!
  cancelledAtTimestamp: BigInt     # Optional
  cancelledAtTransaction: String   # Optional
  executedAtTimestamp: BigInt      # Optional
  executedAtTransaction: String    # Optional
}

type Target @entity {
  id: ID!
  name: String!
  platform: Platform!
  params: [Param]! @derivedFrom(field: "target")
  spells: [Spell]! @derivedFrom(field: "target")
}

type Param @entity {
  id: ID!
  description: String!      # Human-readable description
  currentValue: String!     # String representation of the value
  platform: Platform!       # Affected platform
  target: Target!           # Affected contract
  history: [ParamHistory]! @derivedFrom(field:"param")
  proposals: [ParamProposal]! @derivedFrom(field:"param")
}

type ParamHistory @entity {
  id: ID!
  param: Param!
  oldValue: String!
  newValue: String!
  changedInSpell: Spell! # Spell that changed the Param when it was executed
  timestamp: BigInt!     # Time of spell execution
}

type ParamProposal @entity {
  id: ID!
  param: Param!
  proposedValue: String!
  proposedInSpell: Spell!
  timestamp: BigInt!      # Time of spell creation
  eta: BigInt!            # Eta of spell
}
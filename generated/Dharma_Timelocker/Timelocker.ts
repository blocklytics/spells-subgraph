// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class TimelockInitiated extends EthereumEvent {
  get params(): TimelockInitiated__Params {
    return new TimelockInitiated__Params(this);
  }
}

export class TimelockInitiated__Params {
  _event: TimelockInitiated;

  constructor(event: TimelockInitiated) {
    this._event = event;
  }

  get functionSelector(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get timeComplete(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get arguments(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get timeExpired(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TimelockIntervalModified extends EthereumEvent {
  get params(): TimelockIntervalModified__Params {
    return new TimelockIntervalModified__Params(this);
  }
}

export class TimelockIntervalModified__Params {
  _event: TimelockIntervalModified;

  constructor(event: TimelockIntervalModified) {
    this._event = event;
  }

  get functionSelector(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldInterval(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newInterval(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TimelockExpirationModified extends EthereumEvent {
  get params(): TimelockExpirationModified__Params {
    return new TimelockExpirationModified__Params(this);
  }
}

export class TimelockExpirationModified__Params {
  _event: TimelockExpirationModified;

  constructor(event: TimelockExpirationModified) {
    this._event = event;
  }

  get functionSelector(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldExpiration(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newExpiration(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdharmaContingencyActivated extends EthereumEvent {
  get params(): AdharmaContingencyActivated__Params {
    return new AdharmaContingencyActivated__Params(this);
  }
}

export class AdharmaContingencyActivated__Params {
  _event: AdharmaContingencyActivated;

  constructor(event: AdharmaContingencyActivated) {
    this._event = event;
  }
}

export class AdharmaContingencyExited extends EthereumEvent {
  get params(): AdharmaContingencyExited__Params {
    return new AdharmaContingencyExited__Params(this);
  }
}

export class AdharmaContingencyExited__Params {
  _event: AdharmaContingencyExited;

  constructor(event: AdharmaContingencyExited) {
    this._event = event;
  }
}

export class Timelocker__heartbeatStatusResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromBoolean(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Timelocker__contingencyStatusResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;

  constructor(value0: boolean, value1: boolean, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromBoolean(this.value0));
    map.set("value1", EthereumValue.fromBoolean(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Timelocker__getPriorImplementationResult {
  value0: Address;
  value1: boolean;

  constructor(value0: Address, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromBoolean(this.value1));
    return map;
  }
}

export class Timelocker__getTimelockResult {
  value0: boolean;
  value1: boolean;
  value2: boolean;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: boolean,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromBoolean(this.value0));
    map.set("value1", EthereumValue.fromBoolean(this.value1));
    map.set("value2", EthereumValue.fromBoolean(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    return map;
  }
}

export class Timelocker extends SmartContract {
  static bind(address: Address): Timelocker {
    return new Timelocker("Timelocker", address);
  }

  heartbeatStatus(): Timelocker__heartbeatStatusResult {
    let result = super.call("heartbeatStatus", []);

    return new Timelocker__heartbeatStatusResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_heartbeatStatus(): CallResult<Timelocker__heartbeatStatusResult> {
    let result = super.tryCall("heartbeatStatus", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Timelocker__heartbeatStatusResult(
        value[0].toBoolean(),
        value[1].toBigInt()
      )
    );
  }

  getDefaultTimelockInterval(functionSelector: Bytes): BigInt {
    let result = super.call("getDefaultTimelockInterval", [
      EthereumValue.fromFixedBytes(functionSelector)
    ]);

    return result[0].toBigInt();
  }

  try_getDefaultTimelockInterval(functionSelector: Bytes): CallResult<BigInt> {
    let result = super.tryCall("getDefaultTimelockInterval", [
      EthereumValue.fromFixedBytes(functionSelector)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  contingencyStatus(): Timelocker__contingencyStatusResult {
    let result = super.call("contingencyStatus", []);

    return new Timelocker__contingencyStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt()
    );
  }

  try_contingencyStatus(): CallResult<Timelocker__contingencyStatusResult> {
    let result = super.tryCall("contingencyStatus", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Timelocker__contingencyStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt()
      )
    );
  }

  getPriorImplementation(
    controller: Address,
    beacon: Address,
    index: BigInt
  ): Timelocker__getPriorImplementationResult {
    let result = super.call("getPriorImplementation", [
      EthereumValue.fromAddress(controller),
      EthereumValue.fromAddress(beacon),
      EthereumValue.fromUnsignedBigInt(index)
    ]);

    return new Timelocker__getPriorImplementationResult(
      result[0].toAddress(),
      result[1].toBoolean()
    );
  }

  try_getPriorImplementation(
    controller: Address,
    beacon: Address,
    index: BigInt
  ): CallResult<Timelocker__getPriorImplementationResult> {
    let result = super.tryCall("getPriorImplementation", [
      EthereumValue.fromAddress(controller),
      EthereumValue.fromAddress(beacon),
      EthereumValue.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Timelocker__getPriorImplementationResult(
        value[0].toAddress(),
        value[1].toBoolean()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", []);

    return result[0].toBoolean();
  }

  try_isOwner(): CallResult<boolean> {
    let result = super.tryCall("isOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  getDefaultTimelockExpiration(functionSelector: Bytes): BigInt {
    let result = super.call("getDefaultTimelockExpiration", [
      EthereumValue.fromFixedBytes(functionSelector)
    ]);

    return result[0].toBigInt();
  }

  try_getDefaultTimelockExpiration(
    functionSelector: Bytes
  ): CallResult<BigInt> {
    let result = super.tryCall("getDefaultTimelockExpiration", [
      EthereumValue.fromFixedBytes(functionSelector)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getTotalPriorImplementations(controller: Address, beacon: Address): BigInt {
    let result = super.call("getTotalPriorImplementations", [
      EthereumValue.fromAddress(controller),
      EthereumValue.fromAddress(beacon)
    ]);

    return result[0].toBigInt();
  }

  try_getTotalPriorImplementations(
    controller: Address,
    beacon: Address
  ): CallResult<BigInt> {
    let result = super.tryCall("getTotalPriorImplementations", [
      EthereumValue.fromAddress(controller),
      EthereumValue.fromAddress(beacon)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getTimelock(
    functionSelector: Bytes,
    arguments: Bytes
  ): Timelocker__getTimelockResult {
    let result = super.call("getTimelock", [
      EthereumValue.fromFixedBytes(functionSelector),
      EthereumValue.fromBytes(arguments)
    ]);

    return new Timelocker__getTimelockResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBoolean(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getTimelock(
    functionSelector: Bytes,
    arguments: Bytes
  ): CallResult<Timelocker__getTimelockResult> {
    let result = super.tryCall("getTimelock", [
      EthereumValue.fromFixedBytes(functionSelector),
      EthereumValue.fromBytes(arguments)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Timelocker__getTimelockResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBoolean(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }
}

export class CancelOwnershipTransferCall extends EthereumCall {
  get inputs(): CancelOwnershipTransferCall__Inputs {
    return new CancelOwnershipTransferCall__Inputs(this);
  }

  get outputs(): CancelOwnershipTransferCall__Outputs {
    return new CancelOwnershipTransferCall__Outputs(this);
  }
}

export class CancelOwnershipTransferCall__Inputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class CancelOwnershipTransferCall__Outputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class InitiateTransferControllerOwnershipCall extends EthereumCall {
  get inputs(): InitiateTransferControllerOwnershipCall__Inputs {
    return new InitiateTransferControllerOwnershipCall__Inputs(this);
  }

  get outputs(): InitiateTransferControllerOwnershipCall__Outputs {
    return new InitiateTransferControllerOwnershipCall__Outputs(this);
  }
}

export class InitiateTransferControllerOwnershipCall__Inputs {
  _call: InitiateTransferControllerOwnershipCall;

  constructor(call: InitiateTransferControllerOwnershipCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get extraTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class InitiateTransferControllerOwnershipCall__Outputs {
  _call: InitiateTransferControllerOwnershipCall;

  constructor(call: InitiateTransferControllerOwnershipCall) {
    this._call = call;
  }
}

export class RollbackCall extends EthereumCall {
  get inputs(): RollbackCall__Inputs {
    return new RollbackCall__Inputs(this);
  }

  get outputs(): RollbackCall__Outputs {
    return new RollbackCall__Outputs(this);
  }
}

export class RollbackCall__Inputs {
  _call: RollbackCall;

  constructor(call: RollbackCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beacon(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RollbackCall__Outputs {
  _call: RollbackCall;

  constructor(call: RollbackCall) {
    this._call = call;
  }
}

export class InitiateUpgradeCall extends EthereumCall {
  get inputs(): InitiateUpgradeCall__Inputs {
    return new InitiateUpgradeCall__Inputs(this);
  }

  get outputs(): InitiateUpgradeCall__Outputs {
    return new InitiateUpgradeCall__Outputs(this);
  }
}

export class InitiateUpgradeCall__Inputs {
  _call: InitiateUpgradeCall;

  constructor(call: InitiateUpgradeCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beacon(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get implementation(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get extraTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitiateUpgradeCall__Outputs {
  _call: InitiateUpgradeCall;

  constructor(call: InitiateUpgradeCall) {
    this._call = call;
  }
}

export class ActivateAdharmaContingencyCall extends EthereumCall {
  get inputs(): ActivateAdharmaContingencyCall__Inputs {
    return new ActivateAdharmaContingencyCall__Inputs(this);
  }

  get outputs(): ActivateAdharmaContingencyCall__Outputs {
    return new ActivateAdharmaContingencyCall__Outputs(this);
  }
}

export class ActivateAdharmaContingencyCall__Inputs {
  _call: ActivateAdharmaContingencyCall;

  constructor(call: ActivateAdharmaContingencyCall) {
    this._call = call;
  }
}

export class ActivateAdharmaContingencyCall__Outputs {
  _call: ActivateAdharmaContingencyCall;

  constructor(call: ActivateAdharmaContingencyCall) {
    this._call = call;
  }
}

export class HeartbeatCall extends EthereumCall {
  get inputs(): HeartbeatCall__Inputs {
    return new HeartbeatCall__Inputs(this);
  }

  get outputs(): HeartbeatCall__Outputs {
    return new HeartbeatCall__Outputs(this);
  }
}

export class HeartbeatCall__Inputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }
}

export class HeartbeatCall__Outputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }
}

export class TransferControllerOwnershipCall extends EthereumCall {
  get inputs(): TransferControllerOwnershipCall__Inputs {
    return new TransferControllerOwnershipCall__Inputs(this);
  }

  get outputs(): TransferControllerOwnershipCall__Outputs {
    return new TransferControllerOwnershipCall__Outputs(this);
  }
}

export class TransferControllerOwnershipCall__Inputs {
  _call: TransferControllerOwnershipCall;

  constructor(call: TransferControllerOwnershipCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferControllerOwnershipCall__Outputs {
  _call: TransferControllerOwnershipCall;

  constructor(call: TransferControllerOwnershipCall) {
    this._call = call;
  }
}

export class BlockRollbackCall extends EthereumCall {
  get inputs(): BlockRollbackCall__Inputs {
    return new BlockRollbackCall__Inputs(this);
  }

  get outputs(): BlockRollbackCall__Outputs {
    return new BlockRollbackCall__Outputs(this);
  }
}

export class BlockRollbackCall__Inputs {
  _call: BlockRollbackCall;

  constructor(call: BlockRollbackCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beacon(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BlockRollbackCall__Outputs {
  _call: BlockRollbackCall;

  constructor(call: BlockRollbackCall) {
    this._call = call;
  }
}

export class InitiateModifyTimelockIntervalCall extends EthereumCall {
  get inputs(): InitiateModifyTimelockIntervalCall__Inputs {
    return new InitiateModifyTimelockIntervalCall__Inputs(this);
  }

  get outputs(): InitiateModifyTimelockIntervalCall__Outputs {
    return new InitiateModifyTimelockIntervalCall__Outputs(this);
  }
}

export class InitiateModifyTimelockIntervalCall__Inputs {
  _call: InitiateModifyTimelockIntervalCall;

  constructor(call: InitiateModifyTimelockIntervalCall) {
    this._call = call;
  }

  get functionSelector(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newTimelockInterval(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get extraTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class InitiateModifyTimelockIntervalCall__Outputs {
  _call: InitiateModifyTimelockIntervalCall;

  constructor(call: InitiateModifyTimelockIntervalCall) {
    this._call = call;
  }
}

export class ExitAdharmaContingencyCall extends EthereumCall {
  get inputs(): ExitAdharmaContingencyCall__Inputs {
    return new ExitAdharmaContingencyCall__Inputs(this);
  }

  get outputs(): ExitAdharmaContingencyCall__Outputs {
    return new ExitAdharmaContingencyCall__Outputs(this);
  }
}

export class ExitAdharmaContingencyCall__Inputs {
  _call: ExitAdharmaContingencyCall;

  constructor(call: ExitAdharmaContingencyCall) {
    this._call = call;
  }

  get smartWalletImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get keyRingImplementation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExitAdharmaContingencyCall__Outputs {
  _call: ExitAdharmaContingencyCall;

  constructor(call: ExitAdharmaContingencyCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends EthereumCall {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class ArmAdharmaContingencyCall extends EthereumCall {
  get inputs(): ArmAdharmaContingencyCall__Inputs {
    return new ArmAdharmaContingencyCall__Inputs(this);
  }

  get outputs(): ArmAdharmaContingencyCall__Outputs {
    return new ArmAdharmaContingencyCall__Outputs(this);
  }
}

export class ArmAdharmaContingencyCall__Inputs {
  _call: ArmAdharmaContingencyCall;

  constructor(call: ArmAdharmaContingencyCall) {
    this._call = call;
  }

  get armed(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ArmAdharmaContingencyCall__Outputs {
  _call: ArmAdharmaContingencyCall;

  constructor(call: ArmAdharmaContingencyCall) {
    this._call = call;
  }
}

export class NewHeartbeaterCall extends EthereumCall {
  get inputs(): NewHeartbeaterCall__Inputs {
    return new NewHeartbeaterCall__Inputs(this);
  }

  get outputs(): NewHeartbeaterCall__Outputs {
    return new NewHeartbeaterCall__Outputs(this);
  }
}

export class NewHeartbeaterCall__Inputs {
  _call: NewHeartbeaterCall;

  constructor(call: NewHeartbeaterCall) {
    this._call = call;
  }

  get heartbeater(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NewHeartbeaterCall__Outputs {
  _call: NewHeartbeaterCall;

  constructor(call: NewHeartbeaterCall) {
    this._call = call;
  }
}

export class ModifyTimelockExpirationCall extends EthereumCall {
  get inputs(): ModifyTimelockExpirationCall__Inputs {
    return new ModifyTimelockExpirationCall__Inputs(this);
  }

  get outputs(): ModifyTimelockExpirationCall__Outputs {
    return new ModifyTimelockExpirationCall__Outputs(this);
  }
}

export class ModifyTimelockExpirationCall__Inputs {
  _call: ModifyTimelockExpirationCall;

  constructor(call: ModifyTimelockExpirationCall) {
    this._call = call;
  }

  get functionSelector(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newTimelockExpiration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyTimelockExpirationCall__Outputs {
  _call: ModifyTimelockExpirationCall;

  constructor(call: ModifyTimelockExpirationCall) {
    this._call = call;
  }
}

export class AgreeToAcceptControllerOwnershipCall extends EthereumCall {
  get inputs(): AgreeToAcceptControllerOwnershipCall__Inputs {
    return new AgreeToAcceptControllerOwnershipCall__Inputs(this);
  }

  get outputs(): AgreeToAcceptControllerOwnershipCall__Outputs {
    return new AgreeToAcceptControllerOwnershipCall__Outputs(this);
  }
}

export class AgreeToAcceptControllerOwnershipCall__Inputs {
  _call: AgreeToAcceptControllerOwnershipCall;

  constructor(call: AgreeToAcceptControllerOwnershipCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get willAcceptOwnership(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AgreeToAcceptControllerOwnershipCall__Outputs {
  _call: AgreeToAcceptControllerOwnershipCall;

  constructor(call: AgreeToAcceptControllerOwnershipCall) {
    this._call = call;
  }
}

export class ModifyTimelockIntervalCall extends EthereumCall {
  get inputs(): ModifyTimelockIntervalCall__Inputs {
    return new ModifyTimelockIntervalCall__Inputs(this);
  }

  get outputs(): ModifyTimelockIntervalCall__Outputs {
    return new ModifyTimelockIntervalCall__Outputs(this);
  }
}

export class ModifyTimelockIntervalCall__Inputs {
  _call: ModifyTimelockIntervalCall;

  constructor(call: ModifyTimelockIntervalCall) {
    this._call = call;
  }

  get functionSelector(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newTimelockInterval(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyTimelockIntervalCall__Outputs {
  _call: ModifyTimelockIntervalCall;

  constructor(call: ModifyTimelockIntervalCall) {
    this._call = call;
  }
}

export class UpgradeCall extends EthereumCall {
  get inputs(): UpgradeCall__Inputs {
    return new UpgradeCall__Inputs(this);
  }

  get outputs(): UpgradeCall__Outputs {
    return new UpgradeCall__Outputs(this);
  }
}

export class UpgradeCall__Inputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beacon(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get implementation(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpgradeCall__Outputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class InitiateModifyTimelockExpirationCall extends EthereumCall {
  get inputs(): InitiateModifyTimelockExpirationCall__Inputs {
    return new InitiateModifyTimelockExpirationCall__Inputs(this);
  }

  get outputs(): InitiateModifyTimelockExpirationCall__Outputs {
    return new InitiateModifyTimelockExpirationCall__Outputs(this);
  }
}

export class InitiateModifyTimelockExpirationCall__Inputs {
  _call: InitiateModifyTimelockExpirationCall;

  constructor(call: InitiateModifyTimelockExpirationCall) {
    this._call = call;
  }

  get functionSelector(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newTimelockExpiration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get extraTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class InitiateModifyTimelockExpirationCall__Outputs {
  _call: InitiateModifyTimelockExpirationCall;

  constructor(call: InitiateModifyTimelockExpirationCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

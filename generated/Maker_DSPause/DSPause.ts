// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LogNote extends EthereumEvent {
  get params(): LogNote__Params {
    return new LogNote__Params(this);
  }
}

export class LogNote__Params {
  _event: LogNote;

  constructor(event: LogNote) {
    this._event = event;
  }

  get sig(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get guy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get foo(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get bar(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get wad(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fax(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class LogSetAuthority extends EthereumEvent {
  get params(): LogSetAuthority__Params {
    return new LogSetAuthority__Params(this);
  }
}

export class LogSetAuthority__Params {
  _event: LogSetAuthority;

  constructor(event: LogSetAuthority) {
    this._event = event;
  }

  get authority(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogSetOwner extends EthereumEvent {
  get params(): LogSetOwner__Params {
    return new LogSetOwner__Params(this);
  }
}

export class LogSetOwner__Params {
  _event: LogSetOwner;

  constructor(event: LogSetOwner) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DSPause extends SmartContract {
  static bind(address: Address): DSPause {
    return new DSPause("DSPause", address);
  }

  authority(): Address {
    let result = super.call("authority", []);

    return result[0].toAddress();
  }

  try_authority(): CallResult<Address> {
    let result = super.tryCall("authority", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  delay(): BigInt {
    let result = super.call("delay", []);

    return result[0].toBigInt();
  }

  try_delay(): CallResult<BigInt> {
    let result = super.tryCall("delay", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  exec(usr: Address, tag: Bytes, fax: Bytes, eta: BigInt): Bytes {
    let result = super.call("exec", [
      EthereumValue.fromAddress(usr),
      EthereumValue.fromFixedBytes(tag),
      EthereumValue.fromBytes(fax),
      EthereumValue.fromUnsignedBigInt(eta)
    ]);

    return result[0].toBytes();
  }

  try_exec(
    usr: Address,
    tag: Bytes,
    fax: Bytes,
    eta: BigInt
  ): CallResult<Bytes> {
    let result = super.tryCall("exec", [
      EthereumValue.fromAddress(usr),
      EthereumValue.fromFixedBytes(tag),
      EthereumValue.fromBytes(fax),
      EthereumValue.fromUnsignedBigInt(eta)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  plans(param0: Bytes): boolean {
    let result = super.call("plans", [EthereumValue.fromFixedBytes(param0)]);

    return result[0].toBoolean();
  }

  try_plans(param0: Bytes): CallResult<boolean> {
    let result = super.tryCall("plans", [EthereumValue.fromFixedBytes(param0)]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  proxy(): Address {
    let result = super.call("proxy", []);

    return result[0].toAddress();
  }

  try_proxy(): CallResult<Address> {
    let result = super.tryCall("proxy", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get delay_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get authority_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DropCall extends EthereumCall {
  get inputs(): DropCall__Inputs {
    return new DropCall__Inputs(this);
  }

  get outputs(): DropCall__Outputs {
    return new DropCall__Outputs(this);
  }
}

export class DropCall__Inputs {
  _call: DropCall;

  constructor(call: DropCall) {
    this._call = call;
  }

  get usr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tag(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get fax(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get eta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DropCall__Outputs {
  _call: DropCall;

  constructor(call: DropCall) {
    this._call = call;
  }
}

export class ExecCall extends EthereumCall {
  get inputs(): ExecCall__Inputs {
    return new ExecCall__Inputs(this);
  }

  get outputs(): ExecCall__Outputs {
    return new ExecCall__Outputs(this);
  }
}

export class ExecCall__Inputs {
  _call: ExecCall;

  constructor(call: ExecCall) {
    this._call = call;
  }

  get usr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tag(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get fax(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get eta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ExecCall__Outputs {
  _call: ExecCall;

  constructor(call: ExecCall) {
    this._call = call;
  }

  get out(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PlotCall extends EthereumCall {
  get inputs(): PlotCall__Inputs {
    return new PlotCall__Inputs(this);
  }

  get outputs(): PlotCall__Outputs {
    return new PlotCall__Outputs(this);
  }
}

export class PlotCall__Inputs {
  _call: PlotCall;

  constructor(call: PlotCall) {
    this._call = call;
  }

  get usr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tag(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get fax(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get eta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PlotCall__Outputs {
  _call: PlotCall;

  constructor(call: PlotCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends EthereumCall {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get authority_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetDelayCall extends EthereumCall {
  get inputs(): SetDelayCall__Inputs {
    return new SetDelayCall__Inputs(this);
  }

  get outputs(): SetDelayCall__Outputs {
    return new SetDelayCall__Outputs(this);
  }
}

export class SetDelayCall__Inputs {
  _call: SetDelayCall;

  constructor(call: SetDelayCall) {
    this._call = call;
  }

  get delay_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDelayCall__Outputs {
  _call: SetDelayCall;

  constructor(call: SetDelayCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends EthereumCall {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}
